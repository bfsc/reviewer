--------------------------------------------------------------------------------
--									DDL SCRIPT							      --
--------------------------------------------------------------------------------


-- --------------------------------  SCHEMAS -------------------------------- --

CREATE SCHEMA reviewer AUTHORIZATION sa;


-- --------------------------------  TABLES --------------------------------- --

CREATE CACHED TABLE reviewer.app_properties(	
	version VARCHAR(100)
);
INSERT INTO reviewer.app_properties(version) VALUES('0.1.0');

CREATE CACHED TABLE reviewer.automatedsearches(
	automatedsearch_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	query_string VARCHAR(50000),
);

CREATE CACHED TABLE reviewer.evaluator_analysis(
	evaluation_analysis_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	evaluator_id INTEGER,
	name VARCHAR(50000),
	study_analisys_id INTEGER,
	CONSTRAINT sa_study_analisys_fk FOREIGN KEY(study_analisys_id) REFERENCES reviewer.study_analisys(study_analisys_id) ON DELETE CASCADE,
);


CREATE CACHED TABLE reviewer.criteria(
	criteria_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY, 
	name VARCHAR(50000),
	evaluation_analysis_id INTEGER,
	CONSTRAINT evaluator_analysis_fk FOREIGN KEY(evaluation_analysis_id) REFERENCES reviewer.evaluator_analysis(evaluation_analysis_id),
);

CREATE CACHED TABLE reviewer.evaluator(
	evaluator_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY, 
	name VARCHAR(50000),
	group_id INTEGER,
	CONSTRAINT g_groups_fk FOREIGN KEY(group_id) REFERENCES reviewer.groups(group_id) ON DELETE CASCADE,
);

-- is 'group' a reserved word? I've put groups because eclipse indicated that 'group' is a reserved word --
CREATE CACHED TABLE reviewer.groups(
	group_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	phase_id INTEGER,
	CONSTRAINT p_phase_fk FOREIGN KEY(phase_id) REFERENCES reviewer.phase(phase_id) ON DELETE CASCADE,
);

CREATE CACHED TABLE reviewer.literature_reviews(
	literature_review_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	title VARCHAR(5000),
	query_string VARCHAR(50000),
);

CREATE CACHED TABLE reviewer.literature_review_studies(
	study_id INTEGER,
	literature_review_id INTEGER,
	CONSTRAINT lrs_studies_fk FOREIGN KEY(study_id) REFERENCES reviewer.studies(study_id) ON DELETE CASCADE,
	CONSTRAINT lrs_literature_review_fk FOREIGN KEY(literature_review_id) REFERENCES reviewer.literature_reviews(literature_review_id)
);

CREATE CACHED TABLE reviewer.literature_reviews_sources(
	literature_review_id INTEGER,
	name VARCHAR(1000),
	type VARCHAR(100),
	total_found INTEGER,
	total_fetched INTEGER,	
	CONSTRAINT lrs_sources_fk FOREIGN KEY(literature_review_id) REFERENCES reviewer.literature_reviews(literature_review_id),
);

CREATE CACHED TABLE reviewer.phase(
	phase_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
);

CREATE CACHED TABLE reviewer.query_info(
	query_info_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	total_found INTEGER,
	total_fetched INTEGER,
	source VARCHAR(50000),
	automatedsearch_id INTEGER,
	CONSTRAINT automated_search_fk FOREIGN KEY(automatedsearch_id) REFERENCES reviewer.automated_search(automatedsearch_id),
);

CREATE CACHED TABLE reviewer.studies(
	study_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	code VARCHAR(1000),
	title VARCHAR(5000),
	status VARCHAR(100),
	source VARCHAR(1000),
	abstract VARCHAR(50000),
	year VARCHAR(100),
	url VARCHAR(10000),
);

CREATE CACHED TABLE reviewer.studies_authors(
	study_id INTEGER,
	author VARCHAR(10000),
	CONSTRAINT authors_studies_fk FOREIGN KEY(study_id) REFERENCES reviewer.studies(study_id)
);

CREATE CACHED TABLE reviewer.studies_institutions(
	study_id INTEGER,
	institution VARCHAR(10000),
	CONSTRAINT institutions_studies_fk FOREIGN KEY(study_id) REFERENCES reviewer.studies(study_id)
);

CREATE CACHED TABLE reviewer.studies_countries(
	study_id INTEGER,
	country VARCHAR(10000),
	CONSTRAINT countries_studies_fk FOREIGN KEY(study_id) REFERENCES reviewer.studies(study_id)
);

CREATE CACHE TABLE reviewer.study_analisys(
	study_analisys_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	phase_id INTEGER,
	CONSTRAINT p_phase_fk FOREIGN KEY(phase_id) REFERENCES reviewer.phase(phase_id) ON DELETE CASCADE,	
);