========================================
DEVELOPMENT ENVIRONMENT
========================================
[requirements and dependencies] - this project is being developed on the Eclipse RCP (Rich Client Platform) platform, so you need install the Eclipse IDE in its version for RCP and RAP Developers whose link follows below:
		
		http://www.eclipse.org/downloads/packages/eclipse-rcp-and-rap-developers/junosr2
		
	[installation] - the installation of Eclipse IDE and quite similar for Linux, Mac and Windows, consisting of download the link above by selecting according to your processor architecture,
					 unzip and open the executable application, where Linux and Mac file name and "Eclipse", in the case of Windows, the file name and "Eclipse.exe"
	
	
	[configuring] - this version of the Eclipse IDE indicated above comes ready to work with Eclipse RCP, but we need to add plugins to the IDE that can work with persistence (JPA).
					to add the plugins needed for this project, let's go:
					
						Help > Install new software
						
					A window will open and in the "Work with" select URL:
					
					 	Juno - http://download.eclipse.org/releases/juno
					
					in the search field, type "persistence", wait until the result of the search appear (this may take a few seconds and the IDE seemed locked but not this),
					select all the items that will be displayed.
					
					and then paste this address in the "Work witch" field:
					
					 	http://download.eclipse.org/tools/ajdt/42/update
						
					click "Add" and enter the any name you like (I recommend that you set the name as "AJDT" to be easier to remember that you added to this repository).
					after adding it, select it and expect it to view the content available on the repository, select all the items that are displayed and click "Next.".
					
					at this point the Eclipse IDE had analyzed the dependencies and just accept the license to be inciado downloading and installation of plugins, the end will be prompted to restart.
					after the IDE is restarted, we can import the REviewER for the Eclipse IDE.

[how to import project] - With Eclipse IDE open, select menu items in the following order:
	File > Import > Git > Project from Git > URI
	
	On opening window, fill the field "URI" with this address: https://github.com/bfsc/reviewer.git
	In "Authentication", put your login details to github (this part is optional, fill if you want to contribute to this project source code updates).
	
	When you click "next", the Git plugin in Eclipse will check the repository and show his tree, keep the branch "Master" selected and click "Next".
	
	Next window is where you define where the project will be stored locally, when done, click on "Next" button and will appear choice of which will be the local repository that will lodge the copied files from the remote repository.
	
	The next pass is to select the projects to be imported, this is the part that requires more attention process, the projects to be imported are:

		br.ufpe.cin.reviewer.core
		br.ufpe.cin.reviewer.export
		br.ufpe.cin.reviewer.logger
		br.ufpe.cin.reviewer.model
		br.ufpe.cin.reviewer.persistence
		br.ufpe.cin.reviewer.searchprovider.acm
		br.ufpe.cin.reviewer.searchprovider.engineeringvillage
		br.ufpe.cin.reviewer.searchprovider.ieee
		br.ufpe.cin.reviewer.searchprovider.sciencedirect
		br.ufpe.cin.reviewer.searchprovider.scopus
		br.ufpe.cin.reviewer.searchprovider.spi
		br.ufpe.cin.reviewer.searchprovider.springerlink
		br.ufpe.cin.reviewer.searchprovider.teste
		br.ufpe.cin.reviewer.ui.rcp
	
	Certainly perceive that some of these projects appear duplicate names, select only those that appear on the path where they will be stored , there is no reference to "swing".
	example:
		br.ufpe.cin.reviewer.core (C:\Users\user\git\reviewer\code\br.ufpe.cin.reviewer.core)
		br.ufpe.cin.reviewer.core (C:\Users\user\git\reviewer\pocs\swing.version\br.ufpe.cin.reviewer.core)
	In this case we chose the first option.
	
	After you finish the selection, just click "Finish" the git plugin for the Eclipse IDE will import the project.
	
